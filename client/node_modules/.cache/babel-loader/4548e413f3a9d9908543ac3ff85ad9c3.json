{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\coding-files\\\\projects\\\\web-chat-app\\\\client\\\\src\\\\asset\\\\ChatListFolder\\\\ChatList.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport { FaSistrix } from \"react-icons/fa\";\nimport './ChatList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ChatList() {\n  _s();\n\n  //This is our data of users fetched from our database\n  const [listOfUserFromDatabase, setListOfUserFromDatabase] = useState([{\n    name: \"Tom\",\n    age: 16,\n    color: \"purple\",\n    id: 1\n  }, {\n    name: \"Kim\",\n    age: 17,\n    color: \"black\",\n    id: 2\n  }, {\n    name: \"Rio\",\n    age: 19,\n    color: \"green\",\n    id: 3\n  }, {\n    name: \"Joy\",\n    age: 17,\n    color: \"white\",\n    id: 4\n  }, {\n    name: \"Joy\",\n    age: 15,\n    color: \"white\",\n    id: 5\n  }, {\n    name: \"Rick\",\n    age: 17,\n    color: \"white\",\n    id: 6\n  }]);\n  const togRef = useRef();\n  /* - - - - - [ALL USESTATE FOR THIS PARTICULAR COMPONENT] - - - - - */\n  //This will help us storing the list of user from DB here\n\n  const [searchLists, setSearchLists] = useState(listOfUserFromDatabase); //This setFilteredData will store the filtered element based on the user\n  //search input and then store it in the filteredData variable so we can\n  //map it\n\n  const [filteredData, setFilteredData] = useState([]); //This is used for capturing what the user types into the search box\n\n  const [searchWord, setSearchWord] = useState();\n  /* - - - - - [ALL OUR FUNCTIONS FOR THIS PARTICULAR COMPONENT] - - - - -*/\n  //This is to store what the user type in the search box so we can\n  //use for filtering and also filter the name of user in realtime \n  //based on serach input\n\n  const onChangeFunction = event => {\n    //This will grab the value in the user type in the input box and store it in the searchFilter state\n    //please note: the toLowerCase() will convert the value to lowercase so that it can match with the\n    //lowercase name properties in the database. (we'd convert all name properties in DB to lowercase too)\n    setSearchWord(event.target.value.toLowerCase()); //This will filter out users that matches the character inputted by the user in realtime\n    //and then store it in the newFilter variable. please note: the toLowerCase() will convert the value of the\n    // DB name property to lowercase so that it can match with the value from the search input which we already \n    //convertted to lowercase using the toLowercase() method.\n\n    const newFilter = searchLists.filter(s => {\n      //Here we're returning users that their names matches with the value the user is inputting as they\n      //are typing it out on the go...\n      return s.name.toLowerCase().includes(searchWord.toLowerCase());\n    });\n    /*         if(searchWord === \" \"){\r\n                setFilteredData([{}])\r\n               } else {\r\n                //This will set the searchLists to the new filtered data stored in the arr variable\r\n               setFilteredData(newFilter)*/\n\n    setFilteredData(newFilter);\n    togRef.current.backgroundColor = 'red';\n  }; //This function is used for searching for user with the name that \n  //matches what the user is searching\n\n\n  const searchUser = () => {\n    const newArray = searchLists.filter(searchList => {\n      //Here, we're saying: if the name the user doesn't exist, we should print an error message\n      //else, the program should return the name that matches what the user is searching for\n      if (searchList.name.toLowerCase() !== searchWord.toLowerCase()) {\n        console.log('user dont exist');\n      } else {\n        return searchList.name.toLowerCase() === searchWord.toLowerCase();\n      }\n    });\n    setFilteredData(newArray);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      border: \"5px solid black\",\n      paddingBottom: \"800px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-input-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"search-input\",\n        onChange: onChangeFunction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FaSistrix, {\n        className: \"search-input-icon\",\n        onClick: searchUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'true',\n        position: 'absolute',\n        minWidth: '160px',\n        boxShadow: '0px 8px 16px 0px rgba(0,0,0,0.2)',\n        zIndex: 1\n      },\n      children: filteredData.map((sL, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 20,\n          marginBottom: 20\n        },\n        className: \"dis\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: sL.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: sL.age\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: sL.color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: sL.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 25\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }, this))\n      /*  \r\n        filteredData.map((sL, id) => (\r\n                     <option key={sL.id} value={sL.name} onClick={console.log(sL.id)}>{sL.name}{sL.age}</option>\r\n                   \r\n               )\r\n                  \r\n            )*/\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this), \"aim\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChatList, \"DCT21Yxf0VHH04T7ee04TaYVcig=\");\n\n_c = ChatList;\nexport default ChatList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatList\");","map":{"version":3,"names":["useRef","useState","FaSistrix","ChatList","listOfUserFromDatabase","setListOfUserFromDatabase","name","age","color","id","togRef","searchLists","setSearchLists","filteredData","setFilteredData","searchWord","setSearchWord","onChangeFunction","event","target","value","toLowerCase","newFilter","filter","s","includes","current","backgroundColor","searchUser","newArray","searchList","console","log","border","paddingBottom","display","position","minWidth","boxShadow","zIndex","map","sL","marginTop","marginBottom"],"sources":["C:/Users/HP/Desktop/coding-files/projects/web-chat-app/client/src/asset/ChatListFolder/ChatList.js"],"sourcesContent":["import { useRef, useState } from \"react\";\r\nimport { FaSistrix } from \"react-icons/fa\";\r\nimport './ChatList.css';\r\n\r\nfunction ChatList(){\r\n    //This is our data of users fetched from our database\r\n    const [listOfUserFromDatabase, setListOfUserFromDatabase] = useState([{\r\n        name:\"Tom\",\r\n        age: 16,\r\n        color:\"purple\",\r\n        id:1\r\n    },\r\n    {\r\n        name:\"Kim\",\r\n        age: 17,\r\n        color:\"black\",\r\n        id:2\r\n    },\r\n\r\n    {\r\n        name:\"Rio\",\r\n        age: 19,\r\n        color:\"green\",\r\n        id:3\r\n    },\r\n\r\n    {\r\n        name:\"Joy\",\r\n        age: 17,\r\n        color:\"white\",\r\n        id:4\r\n    },\r\n\r\n    {\r\n        name:\"Joy\",\r\n        age: 15,\r\n        color:\"white\",\r\n        id:5\r\n    },\r\n\r\n    {\r\n        name:\"Rick\",\r\n        age: 17,\r\n        color:\"white\",\r\n        id:6\r\n    }])\r\n\r\n\r\n    const togRef = useRef()\r\n\r\n\r\n    /* - - - - - [ALL USESTATE FOR THIS PARTICULAR COMPONENT] - - - - - */\r\n\r\n    //This will help us storing the list of user from DB here\r\n    const [searchLists, setSearchLists] = useState( listOfUserFromDatabase )\r\n\r\n    //This setFilteredData will store the filtered element based on the user\r\n    //search input and then store it in the filteredData variable so we can\r\n    //map it\r\n    const [filteredData, setFilteredData] = useState([])\r\n\r\n    //This is used for capturing what the user types into the search box\r\n    const [searchWord, setSearchWord] = useState();\r\n\r\n\r\n\r\n    /* - - - - - [ALL OUR FUNCTIONS FOR THIS PARTICULAR COMPONENT] - - - - -*/\r\n\r\n    //This is to store what the user type in the search box so we can\r\n    //use for filtering and also filter the name of user in realtime \r\n    //based on serach input\r\n    const onChangeFunction = ( event ) => {\r\n\r\n        //This will grab the value in the user type in the input box and store it in the searchFilter state\r\n        //please note: the toLowerCase() will convert the value to lowercase so that it can match with the\r\n        //lowercase name properties in the database. (we'd convert all name properties in DB to lowercase too)\r\n         setSearchWord(event.target.value.toLowerCase())\r\n        \r\n        //This will filter out users that matches the character inputted by the user in realtime\r\n        //and then store it in the newFilter variable. please note: the toLowerCase() will convert the value of the\r\n        // DB name property to lowercase so that it can match with the value from the search input which we already \r\n        //convertted to lowercase using the toLowercase() method.\r\n        const newFilter = searchLists.filter( (s) => {  \r\n\r\n        //Here we're returning users that their names matches with the value the user is inputting as they\r\n        //are typing it out on the go...\r\n           return s.name.toLowerCase().includes(searchWord.toLowerCase())\r\n            \r\n        })\r\n\r\n  /*         if(searchWord === \" \"){\r\n\r\n            setFilteredData([{}])\r\n\r\n           } else {\r\n\r\n            //This will set the searchLists to the new filtered data stored in the arr variable\r\n             setFilteredData(newFilter)*/\r\n\r\n             setFilteredData(newFilter)\r\n    \r\n           \r\n           togRef.current.backgroundColor = 'red' \r\n           \r\n    \r\n    }\r\n\r\n   \r\n    //This function is used for searching for user with the name that \r\n    //matches what the user is searching\r\n    const searchUser = () => {\r\n\r\n       const newArray = searchLists.filter( (searchList) => {\r\n          \r\n        //Here, we're saying: if the name the user doesn't exist, we should print an error message\r\n        //else, the program should return the name that matches what the user is searching for\r\n        \r\n          if (searchList.name.toLowerCase() !== searchWord.toLowerCase() ){\r\n\r\n                console.log('user dont exist');\r\n\r\n          } else { \r\n            \r\n            return searchList.name.toLowerCase() === searchWord.toLowerCase(); \r\n        \r\n        }\r\n      })\r\n\r\n      setFilteredData(newArray)\r\n     \r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n        <div style={{border:\"5px solid black\", paddingBottom: \"800px\"}}>\r\n\r\n            <div className=\"search-input-div\">\r\n\r\n                <input type=\"text\" className=\"search-input\" onChange={onChangeFunction}></input>\r\n\r\n                <FaSistrix className=\"search-input-icon\" onClick={searchUser}/>\r\n\r\n              \r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            <div \r\n            style={{display: 'true', \r\n            position: 'absolute', \r\n            minWidth:'160px', \r\n            boxShadow: '0px 8px 16px 0px rgba(0,0,0,0.2)',\r\n            zIndex:1}}>\r\n            {\r\n\r\n\r\n                filteredData.map((sL, id) => ( \r\n                    <div key={id} style={{marginTop:20, marginBottom:20}} className=\"dis\">\r\n                        <p>{sL.name}</p>\r\n                        <p>{sL.age}</p>\r\n                        <p>{sL.color}</p>\r\n                        <p>{sL.id}</p>\r\n                    </div>\r\n                    \r\n                    ))\r\n                \r\n\r\n\r\n\r\n               /*  \r\n                 filteredData.map((sL, id) => (\r\n\r\n                            <option key={sL.id} value={sL.name} onClick={console.log(sL.id)}>{sL.name}{sL.age}</option>\r\n                            \r\n                        )\r\n                           \r\n                     )*/\r\n              }\r\n           \r\n           </div> \r\n\r\n\r\naim\r\n\r\n\r\n            \r\n            {/*\r\n                filteredData.map((sL, id) => ( \r\n                <div key={id} style={{marginTop:20, marginBottom:20}}>\r\n                    <p>{sL.name}</p>\r\n                    <p>{sL.age}</p>\r\n                    <p>{sL.color}</p>\r\n                    <p>{sL.id}</p>\r\n                </div>\r\n                \r\n                ))\r\n            \r\n                */ } \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatList;"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,OAAO,gBAAP;;;AAEA,SAASC,QAAT,GAAmB;EAAA;;EACf;EACA,MAAM,CAACC,sBAAD,EAAyBC,yBAAzB,IAAsDJ,QAAQ,CAAC,CAAC;IAClEK,IAAI,EAAC,KAD6D;IAElEC,GAAG,EAAE,EAF6D;IAGlEC,KAAK,EAAC,QAH4D;IAIlEC,EAAE,EAAC;EAJ+D,CAAD,EAMrE;IACIH,IAAI,EAAC,KADT;IAEIC,GAAG,EAAE,EAFT;IAGIC,KAAK,EAAC,OAHV;IAIIC,EAAE,EAAC;EAJP,CANqE,EAarE;IACIH,IAAI,EAAC,KADT;IAEIC,GAAG,EAAE,EAFT;IAGIC,KAAK,EAAC,OAHV;IAIIC,EAAE,EAAC;EAJP,CAbqE,EAoBrE;IACIH,IAAI,EAAC,KADT;IAEIC,GAAG,EAAE,EAFT;IAGIC,KAAK,EAAC,OAHV;IAIIC,EAAE,EAAC;EAJP,CApBqE,EA2BrE;IACIH,IAAI,EAAC,KADT;IAEIC,GAAG,EAAE,EAFT;IAGIC,KAAK,EAAC,OAHV;IAIIC,EAAE,EAAC;EAJP,CA3BqE,EAkCrE;IACIH,IAAI,EAAC,MADT;IAEIC,GAAG,EAAE,EAFT;IAGIC,KAAK,EAAC,OAHV;IAIIC,EAAE,EAAC;EAJP,CAlCqE,CAAD,CAApE;EA0CA,MAAMC,MAAM,GAAGV,MAAM,EAArB;EAGA;EAEA;;EACA,MAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAEG,sBAAF,CAA9C,CAlDe,CAoDf;EACA;EACA;;EACA,MAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,EAAD,CAAhD,CAvDe,CAyDf;;EACA,MAAM,CAACc,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,EAA5C;EAIA;EAEA;EACA;EACA;;EACA,MAAMgB,gBAAgB,GAAKC,KAAF,IAAa;IAElC;IACA;IACA;IACCF,aAAa,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,WAAnB,EAAD,CAAb,CALiC,CAOlC;IACA;IACA;IACA;;IACA,MAAMC,SAAS,GAAGX,WAAW,CAACY,MAAZ,CAAqBC,CAAD,IAAO;MAE7C;MACA;MACG,OAAOA,CAAC,CAAClB,IAAF,CAAOe,WAAP,GAAqBI,QAArB,CAA8BV,UAAU,CAACM,WAAX,EAA9B,CAAP;IAEF,CANiB,CAAlB;IAQN;AACF;AACA;AACA;AACA;;IAKaP,eAAe,CAACQ,SAAD,CAAf;IAGFZ,MAAM,CAACgB,OAAP,CAAeC,eAAf,GAAiC,KAAjC;EAGN,CAlCD,CAnEe,CAwGf;EACA;;;EACA,MAAMC,UAAU,GAAG,MAAM;IAEtB,MAAMC,QAAQ,GAAGlB,WAAW,CAACY,MAAZ,CAAqBO,UAAD,IAAgB;MAEpD;MACA;MAEE,IAAIA,UAAU,CAACxB,IAAX,CAAgBe,WAAhB,OAAkCN,UAAU,CAACM,WAAX,EAAtC,EAAgE;QAE1DU,OAAO,CAACC,GAAR,CAAY,iBAAZ;MAEL,CAJD,MAIO;QAEL,OAAOF,UAAU,CAACxB,IAAX,CAAgBe,WAAhB,OAAkCN,UAAU,CAACM,WAAX,EAAzC;MAEH;IACF,CAdiB,CAAjB;IAgBDP,eAAe,CAACe,QAAD,CAAf;EAGD,CArBD;;EA+BA,oBACI;IAAK,KAAK,EAAE;MAACI,MAAM,EAAC,iBAAR;MAA2BC,aAAa,EAAE;IAA1C,CAAZ;IAAA,wBAEI;MAAK,SAAS,EAAC,kBAAf;MAAA,wBAEI;QAAO,IAAI,EAAC,MAAZ;QAAmB,SAAS,EAAC,cAA7B;QAA4C,QAAQ,EAAEjB;MAAtD;QAAA;QAAA;QAAA;MAAA,QAFJ,eAII,QAAC,SAAD;QAAW,SAAS,EAAC,mBAArB;QAAyC,OAAO,EAAEW;MAAlD;QAAA;QAAA;QAAA;MAAA,QAJJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,eAgBI;MACA,KAAK,EAAE;QAACO,OAAO,EAAE,MAAV;QACPC,QAAQ,EAAE,UADH;QAEPC,QAAQ,EAAC,OAFF;QAGPC,SAAS,EAAE,kCAHJ;QAIPC,MAAM,EAAC;MAJA,CADP;MAAA,UASI1B,YAAY,CAAC2B,GAAb,CAAiB,CAACC,EAAD,EAAKhC,EAAL,kBACb;QAAc,KAAK,EAAE;UAACiC,SAAS,EAAC,EAAX;UAAeC,YAAY,EAAC;QAA5B,CAArB;QAAsD,SAAS,EAAC,KAAhE;QAAA,wBACI;UAAA,UAAIF,EAAE,CAACnC;QAAP;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAA,UAAImC,EAAE,CAAClC;QAAP;UAAA;UAAA;UAAA;QAAA,QAFJ,eAGI;UAAA,UAAIkC,EAAE,CAACjC;QAAP;UAAA;UAAA;UAAA;QAAA,QAHJ,eAII;UAAA,UAAIiC,EAAE,CAAChC;QAAP;UAAA;UAAA;UAAA;QAAA,QAJJ;MAAA,GAAUA,EAAV;QAAA;QAAA;QAAA;MAAA,QADJ;MAaD;AACf;AACA;AACA;AACA;AACA;AACA;;IA5BY;MAAA;MAAA;MAAA;IAAA,QAhBJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAuEH;;GAhNQN,Q;;KAAAA,Q;AAkNT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}
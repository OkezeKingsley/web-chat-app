{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\coding-files\\\\projects\\\\web-chat-app\\\\client\\\\src\\\\ChatRoom\\\\ChatRoom.js\",\n    _s = $RefreshSig$();\n\nimport './ChatRoom.css';\nimport useChat from '../useChat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatRoom = props => {\n  _s();\n\n  const {\n    roomId\n  } = props.match.params; //Get roomId from URL\n\n  const {\n    messages,\n    sendMessage\n  } = useChat(roomId); //create a websocket and manages messaging\n\n  const [newMessage, setNewMessage] = useState(''); //Message to be sent\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-roomm-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"room-name\",\n      children: [\"Room: \", roomId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"messages-list\",\n        children: messages.map(message => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `message-item ${message.ownedByCurrentUser ? \"my-message\" : \"receive-message\"}`,\n          children: message.body\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: newMessage,\n      onChange: e => setNewMessage(e.target.value),\n      placeholder: \"write message...\",\n      className: \"new-message-input-field\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => {\n        sendMessage(newMessage);\n        setNewMessage(\"\");\n      },\n      className: \"send-message-button\",\n      children: \"send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChatRoom, \"oYikqRL4+SW6COi7Rk+hVSXJGl0=\", false, function () {\n  return [useChat];\n});\n\n_c = ChatRoom;\nexport default ChatRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["useChat","ChatRoom","props","roomId","match","params","messages","sendMessage","newMessage","setNewMessage","useState","map","message","ownedByCurrentUser","body","i","e","target","value"],"sources":["C:/Users/HP/Desktop/coding-files/projects/web-chat-app/client/src/ChatRoom/ChatRoom.js"],"sourcesContent":["import './ChatRoom.css';\r\nimport useChat from '../useChat';\r\n\r\nconst ChatRoom = (props) => {\r\n    const { roomId } = props.match.params; //Get roomId from URL\r\n    const { messages, sendMessage } = useChat(roomId) //create a websocket and manages messaging\r\n    const [newMessage, setNewMessage] = useState(''); //Message to be sent\r\n\r\n    return(\r\n        <div className=\"chat-roomm-container\">\r\n            <h1 className=\"room-name\">Room: {roomId}</h1>\r\n            <div className=\"messages-container\">\r\n                <ol className=\"messages-list\">\r\n                {\r\n                    messages.map((message) => (\r\n                        <li key={i} \r\n                         className={`message-item ${\r\n                            message.ownedByCurrentUser ? \"my-message\" : \"receive-message\"\r\n                        }`}\r\n                        >\r\n                            {message.body}\r\n                        </li>\r\n                    ))\r\n                }\r\n                </ol>\r\n            </div>\r\n\r\n            <textarea\r\n                value={newMessage}\r\n                onChange={(e) => setNewMessage(e.target.value)}\r\n                placeholder=\"write message...\"\r\n                className=\"new-message-input-field\"\r\n                />\r\n\r\n                <button onClick={(e) => {\r\n                    sendMessage(newMessage)\r\n                    setNewMessage(\"\")  }\r\n                        } className=\"send-message-button\">\r\n                    send\r\n                </button>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ChatRoom;"],"mappings":";;;AAAA,OAAO,gBAAP;AACA,OAAOA,OAAP,MAAoB,YAApB;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;EAAA;;EACxB,MAAM;IAAEC;EAAF,IAAaD,KAAK,CAACE,KAAN,CAAYC,MAA/B,CADwB,CACe;;EACvC,MAAM;IAAEC,QAAF;IAAYC;EAAZ,IAA4BP,OAAO,CAACG,MAAD,CAAzC,CAFwB,CAE0B;;EAClD,MAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BC,QAAQ,CAAC,EAAD,CAA5C,CAHwB,CAG0B;;EAElD,oBACI;IAAK,SAAS,EAAC,sBAAf;IAAA,wBACI;MAAI,SAAS,EAAC,WAAd;MAAA,qBAAiCP,MAAjC;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAK,SAAS,EAAC,oBAAf;MAAA,uBACI;QAAI,SAAS,EAAC,eAAd;QAAA,UAEIG,QAAQ,CAACK,GAAT,CAAcC,OAAD,iBACT;UACC,SAAS,EAAG,gBACTA,OAAO,CAACC,kBAAR,GAA6B,YAA7B,GAA4C,iBAC/C,EAHD;UAAA,UAKKD,OAAO,CAACE;QALb,GAASC,CAAT;UAAA;UAAA;UAAA;QAAA,QADJ;MAFJ;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAFJ,eAkBI;MACI,KAAK,EAAEP,UADX;MAEI,QAAQ,EAAGQ,CAAD,IAAOP,aAAa,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAFlC;MAGI,WAAW,EAAC,kBAHhB;MAII,SAAS,EAAC;IAJd;MAAA;MAAA;MAAA;IAAA,QAlBJ,eAyBQ;MAAQ,OAAO,EAAGF,CAAD,IAAO;QACpBT,WAAW,CAACC,UAAD,CAAX;QACAC,aAAa,CAAC,EAAD,CAAb;MAAoB,CAFxB;MAGU,SAAS,EAAC,qBAHpB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAzBR;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAoCH,CAzCD;;GAAMR,Q;UAEgCD,O;;;KAFhCC,Q;AA2CN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}
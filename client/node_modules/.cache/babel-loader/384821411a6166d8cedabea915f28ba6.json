{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\coding-files\\\\projects\\\\web-chat-app\\\\client\\\\src\\\\assest\\\\ChatBody.js\";\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:4000\"); //making a connection to the server\n\nfunction ChatBody() {\n  //The sendMessage function will be used to send the message\n  //data in the input box to the server so that the server can \n  //emit the message data to all the client connected to it.\n  //NOTE: data must be sent to the server first before it can be\n  //emitted to other client. React can't directly emit the message\n  //data to other client without first getting to the server.\n  const sendMessage = () => {\n    //Here we want to send message to the server to receive so\n    //that it can emit it to other client. After the \"send_message\"\n    //event listener, an object should follow it which will contain\n    //the message data information\n    socket.emit(\"send_message\", {\n      message: \"Hello\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"message...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"send message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_c = ChatBody;\nexport default ChatBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatBody\");","map":{"version":3,"names":["io","socket","connect","ChatBody","sendMessage","emit","message"],"sources":["C:/Users/HP/Desktop/coding-files/projects/web-chat-app/client/src/assest/ChatBody.js"],"sourcesContent":["import io  from 'socket.io-client';\r\n\r\nconst socket = io.connect(\"http://localhost:4000\"); //making a connection to the server\r\n\r\nfunction ChatBody(){\r\n\r\n    //The sendMessage function will be used to send the message\r\n    //data in the input box to the server so that the server can \r\n    //emit the message data to all the client connected to it.\r\n    //NOTE: data must be sent to the server first before it can be\r\n    //emitted to other client. React can't directly emit the message\r\n    //data to other client without first getting to the server.\r\n    const sendMessage = () => {\r\n        //Here we want to send message to the server to receive so\r\n        //that it can emit it to other client. After the \"send_message\"\r\n        //event listener, an object should follow it which will contain\r\n        //the message data information\r\n        socket.emit(\"send_message\", {message: \"Hello\"})\r\n    };\r\n\r\n    return(\r\n        <div>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"message...\"\r\n                ></input>\r\n\r\n                <button>send message</button>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ChatBody;"],"mappings":";AAAA,OAAOA,EAAP,MAAgB,kBAAhB;;AAEA,MAAMC,MAAM,GAAGD,EAAE,CAACE,OAAH,CAAW,uBAAX,CAAf,C,CAAoD;;AAEpD,SAASC,QAAT,GAAmB;EAEf;EACA;EACA;EACA;EACA;EACA;EACA,MAAMC,WAAW,GAAG,MAAM;IACtB;IACA;IACA;IACA;IACAH,MAAM,CAACI,IAAP,CAAY,cAAZ,EAA4B;MAACC,OAAO,EAAE;IAAV,CAA5B;EACH,CAND;;EAQA,oBACI;IAAA,wBACI;MACI,IAAI,EAAC,MADT;MAEI,WAAW,EAAC;IAFhB;MAAA;MAAA;MAAA;IAAA,QADJ,eAMQ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QANR;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAWH;;KA3BQH,Q;AA6BT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}
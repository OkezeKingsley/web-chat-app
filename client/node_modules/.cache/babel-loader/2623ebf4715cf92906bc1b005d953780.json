{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\coding-files\\\\projects\\\\web-chat-app\\\\client\\\\src\\\\asset\\\\AccessFolder\\\\Login.js\",\n    _s = $RefreshSig$();\n\n//Here we create the login page for the chat application\nimport './Login.css';\nimport axios from 'axios';\nimport { useContext, useEffect, useState } from 'react';\nimport { FaUser } from 'react-icons/fa';\nimport { Link, useNavigate } from 'react-router-dom';\nimport socket from '../SocketModuleFolder/socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  const navigate = useNavigate();\n  const [userName, setUserName] = useState('');\n  const [userPassword, setUserPassword] = useState(''); //SUBMIT LOGIN DETAIL TO BACKEND FOR PROCESSES.\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    axios.post(\"http://localhost:4000/login\", {\n      name: userName,\n      password: userPassword\n    }).then(response => {\n      //         console.log(response.data) \n      //If we get a positive result from the response of the fetch and not an error,\n      //we should get the user_id of the user loggin in so that we can \n      //use that to retreive all the unique information about that specific \n      //user throughout our application. The user_id will be stored in the new object\n      //called {result} that we created in our server controller for handling login.\n      if (response.data.result) {\n        const loggedInName = response.data.result;\n        sessionStorage.setItem(\"username\", JSON.stringify(loggedInName)); //THIS EMITS THE USERNAME OF THE LOGGED IN USER TO THE SERVER ONCE LOGIN\n        //SUCCESSFUL SO THAT IT CAN ASSIGN A SOCKET ID TO THE LOGIN USER\n        //(SOCKET ID: THIS IS WHAT THE SERVER WILL USER TO IDENTIFY A USER WHEN\n        //WHEN IS WANTS TO SEND MESSAGE TO THEM). . . \n\n        if (loggedInNameValue) {\n          socket.emit(\"username\", {\n            username: loggedInNameValue\n          });\n        } else {\n          alert('Error ehile getting your name, kindly logout and login again.');\n        } //if the user is accessing this application on a larger screen size, we are then\n        //going to route from this page to the dashboard once login is successful. if \n        //user is accessing this application with smaller screen, we'd route the to the mobile\n        //chat list page.\n\n\n        const matchResult = window.matchMedia(\"(max-width: 767px)\");\n        {\n          matchResult.matches === true ? navigate('/mobilechatList') : navigate('/dashboard');\n        }\n      } else if (response.data.error) {\n        //If there was an error with getting due to wrong user login input, we'd get \n        //notified here...\n        console.log('bad');\n        alert('Error while loggin in.');\n      }\n    }).catch(error => {\n      //This error is for the promise. If there was an error while the promise is \n      //executing, we get notified here...\n      console.log(error);\n      alert('Sorry! error while trying log in.');\n      console.log('err while login');\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-center\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-container\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"f\",\n        children: [\"`\", /*#__PURE__*/_jsxDEV(FaUser, {\n          id: \"loginFaUser\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), \"`\", /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"login-header\",\n        children: \"Sign in to open chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          placeholder: \"username\",\n          name: \"username\",\n          id: \"username\",\n          className: \"username-input\",\n          value: userName,\n          onChange: e => setUserName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          required: true,\n          placeholder: \"password\",\n          minLength: 6,\n          name: \"password\",\n          id: \"password\",\n          className: \"password-input\",\n          value: userPassword,\n          onChange: e => setUserPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"login-cta\",\n          children: \"SIGN IN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"login-sign-up\",\n        children: [\"Dont have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signup\",\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 72\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"forgot-password\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: \"forgot password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"GolU4cTKoEViqXnHTrLUr7xE7SI=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["axios","useContext","useEffect","useState","FaUser","Link","useNavigate","socket","Login","navigate","userName","setUserName","userPassword","setUserPassword","handleSubmit","e","preventDefault","post","name","password","then","response","data","result","loggedInName","sessionStorage","setItem","JSON","stringify","loggedInNameValue","emit","username","alert","matchResult","window","matchMedia","matches","error","console","log","catch","target","value"],"sources":["C:/Users/HP/Desktop/coding-files/projects/web-chat-app/client/src/asset/AccessFolder/Login.js"],"sourcesContent":["//Here we create the login page for the chat application\r\n\r\nimport './Login.css';\r\nimport axios from 'axios'\r\nimport {useContext, useEffect, useState} from 'react';\r\nimport { FaUser } from 'react-icons/fa'\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport socket from '../SocketModuleFolder/socket';\r\n\r\nfunction Login(){\r\n    const navigate = useNavigate();\r\n    const [userName, setUserName] = useState('');\r\n    const [userPassword, setUserPassword] = useState('');\r\n\r\n \r\n    //SUBMIT LOGIN DETAIL TO BACKEND FOR PROCESSES.\r\n    const handleSubmit = async (e) => {\r\n\r\n        e.preventDefault();\r\n       \r\n\r\n       axios.post(\"http://localhost:4000/login\", {\r\n\r\n        name: userName,\r\n\r\n        password: userPassword\r\n\r\n       }).then((response) => {\r\n\r\n //         console.log(response.data) \r\n\r\n          //If we get a positive result from the response of the fetch and not an error,\r\n          //we should get the user_id of the user loggin in so that we can \r\n          //use that to retreive all the unique information about that specific \r\n          //user throughout our application. The user_id will be stored in the new object\r\n          //called {result} that we created in our server controller for handling login.\r\n          if(response.data.result){\r\n\r\n           const loggedInName = response.data.result;\r\n\r\n           sessionStorage.setItem(\"username\", JSON.stringify(loggedInName))\r\n\r\n\r\n\r\n          //THIS EMITS THE USERNAME OF THE LOGGED IN USER TO THE SERVER ONCE LOGIN\r\n          //SUCCESSFUL SO THAT IT CAN ASSIGN A SOCKET ID TO THE LOGIN USER\r\n          //(SOCKET ID: THIS IS WHAT THE SERVER WILL USER TO IDENTIFY A USER WHEN\r\n          //WHEN IS WANTS TO SEND MESSAGE TO THEM). . . \r\n        \r\n            \r\n            if (loggedInNameValue) {\r\n\r\n                socket.emit(\"username\", { username: loggedInNameValue } );\r\n\r\n            } else {\r\n\r\n                alert('Error ehile getting your name, kindly logout and login again.');\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n           \r\n          //if the user is accessing this application on a larger screen size, we are then\r\n          //going to route from this page to the dashboard once login is successful. if \r\n          //user is accessing this application with smaller screen, we'd route the to the mobile\r\n          //chat list page.\r\n           const matchResult = window.matchMedia(\"(max-width: 767px)\");\r\n\r\n           { matchResult.matches === true ? navigate('/mobilechatList') : navigate('/dashboard') }\r\n\r\n\r\n          } else if(response.data.error){\r\n            //If there was an error with getting due to wrong user login input, we'd get \r\n            //notified here...\r\n            console.log('bad')\r\n            alert('Error while loggin in.')\r\n          }\r\n        \r\n\r\n       }).catch((error) => {\r\n             //This error is for the promise. If there was an error while the promise is \r\n             //executing, we get notified here...\r\n             console.log(error) \r\n             alert('Sorry! error while trying log in.')\r\n             console.log('err while login')\r\n       });\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n\r\n        <div className=\"login-center\">\r\n\r\n            <form className=\"login-container\" onSubmit={handleSubmit}>\r\n\r\n                <div className='f'>\r\n\r\n                `<FaUser id=\"loginFaUser\"/>\r\n\r\n                </div>\r\n                    `\r\n                <h2 className=\"login-header\">Sign in to open chat</h2>\r\n                \r\n                <div className=\"user-input\">\r\n                    <input\r\n                        type=\"text\"\r\n                        required\r\n                        placeholder=\"username\"\r\n                        name=\"username\"\r\n                        id=\"username\"\r\n                        className=\"username-input\"\r\n                        value={userName}\r\n                        onChange={(e) => setUserName(e.target.value)}\r\n                        /> \r\n\r\n                    <input\r\n                        type=\"password\"\r\n                        required\r\n                        placeholder=\"password\"\r\n                        minLength={6}\r\n                        name=\"password\"\r\n                        id=\"password\"\r\n                        className=\"password-input\"\r\n                        value={userPassword}\r\n                        onChange={(e) => setUserPassword(e.target.value)}\r\n                        /> \r\n                </div>\r\n\r\n                    <div className=\"btn-container\">\r\n                        <button className=\"login-cta\">SIGN IN</button>\r\n                    </div>\r\n\r\n                    <p className=\"login-sign-up\">Dont have an account? <Link to=\"/signup\">Sign up</Link></p>\r\n                    <p className=\"forgot-password\">\r\n                        <a href=\"#\" >forgot password</a>\r\n                    </p>\r\n\r\n            </form>\r\n            \r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Login;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
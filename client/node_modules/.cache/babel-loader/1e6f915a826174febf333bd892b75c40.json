{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\coding-files\\\\projects\\\\web-chat-app\\\\client\\\\src\\\\asset\\\\ChatListFolder\\\\ChatList.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { FaSistrix } from \"react-icons/fa\";\nimport './ChatList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ChatList() {\n  _s();\n\n  //This is our data of users fetched from our database\n  const [listOfUserFromDatabase, setListOfUserFromDatabase] = useState([{\n    name: \"Tom\",\n    age: 16,\n    color: \"purple\",\n    id: 1\n  }, {\n    name: \"Kim\",\n    age: 17,\n    color: \"black\",\n    id: 2\n  }, {\n    name: \"Rio\",\n    age: 19,\n    color: \"green\",\n    id: 3\n  }, {\n    name: \"Joy\",\n    age: 17,\n    color: \"white\",\n    id: 4\n  }, {\n    name: \"Joy\",\n    age: 15,\n    color: \"white\",\n    id: 5\n  }, {\n    name: \"Rick\",\n    age: 17,\n    color: \"white\",\n    id: 6\n  }]);\n  /* - - - - - [ALL USESTATE FOR THIS PARTICULAR COMPONENT] - - - - - */\n  //This will help us storing the list of user from DB here\n\n  const [searchLists, setSearchLists] = useState(listOfUserFromDatabase); //This setFilteredData will store the filtered element based on the user\n  //search input and then store it in the filteredData variable so we can\n  //map it\n\n  const [filteredData, setFilteredData] = useState([]); //This is used for capturing what the user types into the search box\n\n  const [searchWord, setSearchWord] = useState();\n  /* - - - - - [ALL OUR FUNCTIONS FOR THIS PARTICULAR COMPONENT] - - - - -*/\n  //This is to store what the user type in the search box so we can\n  //use for filtering and also filter the name of user in realtime \n  //based on serach input\n\n  const onChangeFunction = event => {\n    //This will grab the value in the user type in the input box and store it in the searchFilter state\n    //please note: the toLowerCase() will convert the value to lowercase so that it can match with the\n    //lowercase name properties in the database. (we'd convert all name properties in DB to lowercase too)\n    setSearchWord(event.target.value.toLowerCase()); //This will filter out users that matches the character inputted by the user in realtime\n    //and then store it in the newFilter variable. please note: the toLowerCase() will convert the value of the\n    // DB name property to lowercase so that it can match with the value from the search input which we already \n    //convertted to lowercase using the toLowercase() method.\n\n    const newFilter = searchLists.filter(s => {\n      //Here we're returning users that their names matches with the value the user is inputting as they\n      //are typing it out on the go...\n      return s.name.toLowerCase().includes(searchWord.toLowerCase());\n    });\n\n    if (searchWord === \"\") {\n      setFilteredData([]);\n    } else {\n      //This will set the searchLists to the new filtered data stored in the arr variable\n      setFilteredData(newFilter);\n    }\n  }; //This function is used for searching for user with the name that \n  //matches what the user is searching\n\n\n  const searchUser = () => {\n    const newArray = searchLists.filter(searchList => {\n      //Here, we're saying: if the name the user doesn't exist, we should print an error message\n      //else, the program should return the name that matches what the user is searching for\n      if (searchList.name.toLowerCase() !== searchWord) {\n        console.log('user dont exist');\n      } else {\n        return searchList.name.toLowerCase() === searchWord;\n      }\n    });\n    setSearchLists(newArray);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      border: \"5px solid black\",\n      paddingBottom: \"800px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-input-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"search-input\",\n        onChange: onChangeFunction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FaSistrix, {\n        className: \"search-input-icon\",\n        onClick: searchUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), filteredData.map((sL, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 20,\n        marginBottom: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: sL.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: sL.age\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: sL.color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: sL.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }, this)]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChatList, \"Lq7P8fO59tRBlMN450uN6H1dYJI=\");\n\n_c = ChatList;\nexport default ChatList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatList\");","map":{"version":3,"names":["useState","FaSistrix","ChatList","listOfUserFromDatabase","setListOfUserFromDatabase","name","age","color","id","searchLists","setSearchLists","filteredData","setFilteredData","searchWord","setSearchWord","onChangeFunction","event","target","value","toLowerCase","newFilter","filter","s","includes","searchUser","newArray","searchList","console","log","border","paddingBottom","map","sL","marginTop","marginBottom"],"sources":["C:/Users/HP/Desktop/coding-files/projects/web-chat-app/client/src/asset/ChatListFolder/ChatList.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { FaSistrix } from \"react-icons/fa\";\r\nimport './ChatList.css';\r\n\r\nfunction ChatList(){\r\n    //This is our data of users fetched from our database\r\n    const [listOfUserFromDatabase, setListOfUserFromDatabase] = useState([{\r\n        name:\"Tom\",\r\n        age: 16,\r\n        color:\"purple\",\r\n        id:1\r\n    },\r\n    {\r\n        name:\"Kim\",\r\n        age: 17,\r\n        color:\"black\",\r\n        id:2\r\n    },\r\n\r\n    {\r\n        name:\"Rio\",\r\n        age: 19,\r\n        color:\"green\",\r\n        id:3\r\n    },\r\n\r\n    {\r\n        name:\"Joy\",\r\n        age: 17,\r\n        color:\"white\",\r\n        id:4\r\n    },\r\n\r\n    {\r\n        name:\"Joy\",\r\n        age: 15,\r\n        color:\"white\",\r\n        id:5\r\n    },\r\n\r\n    {\r\n        name:\"Rick\",\r\n        age: 17,\r\n        color:\"white\",\r\n        id:6\r\n    }])\r\n\r\n\r\n\r\n    /* - - - - - [ALL USESTATE FOR THIS PARTICULAR COMPONENT] - - - - - */\r\n\r\n    //This will help us storing the list of user from DB here\r\n    const [searchLists, setSearchLists] = useState( listOfUserFromDatabase )\r\n\r\n    //This setFilteredData will store the filtered element based on the user\r\n    //search input and then store it in the filteredData variable so we can\r\n    //map it\r\n    const [filteredData, setFilteredData] = useState([])\r\n\r\n    //This is used for capturing what the user types into the search box\r\n    const [searchWord, setSearchWord] = useState();\r\n\r\n\r\n\r\n    /* - - - - - [ALL OUR FUNCTIONS FOR THIS PARTICULAR COMPONENT] - - - - -*/\r\n\r\n    //This is to store what the user type in the search box so we can\r\n    //use for filtering and also filter the name of user in realtime \r\n    //based on serach input\r\n    const onChangeFunction = ( event ) => {\r\n\r\n        //This will grab the value in the user type in the input box and store it in the searchFilter state\r\n        //please note: the toLowerCase() will convert the value to lowercase so that it can match with the\r\n        //lowercase name properties in the database. (we'd convert all name properties in DB to lowercase too)\r\n         setSearchWord(event.target.value.toLowerCase())\r\n        \r\n        //This will filter out users that matches the character inputted by the user in realtime\r\n        //and then store it in the newFilter variable. please note: the toLowerCase() will convert the value of the\r\n        // DB name property to lowercase so that it can match with the value from the search input which we already \r\n        //convertted to lowercase using the toLowercase() method.\r\n        const newFilter = searchLists.filter( (s) => {  \r\n\r\n        //Here we're returning users that their names matches with the value the user is inputting as they\r\n        //are typing it out on the go...\r\n           return s.name.toLowerCase().includes(searchWord.toLowerCase())\r\n            \r\n        })\r\n\r\n           if(searchWord === \"\"){\r\n            \r\n            setFilteredData([])\r\n\r\n           } else {\r\n\r\n            //This will set the searchLists to the new filtered data stored in the arr variable\r\n             setFilteredData(newFilter)\r\n\r\n           }\r\n    \r\n            \r\n   \r\n           \r\n    \r\n    }\r\n\r\n\r\n    //This function is used for searching for user with the name that \r\n    //matches what the user is searching\r\n    const searchUser = () => {\r\n\r\n       const newArray = searchLists.filter( (searchList) => {\r\n          \r\n        //Here, we're saying: if the name the user doesn't exist, we should print an error message\r\n        //else, the program should return the name that matches what the user is searching for\r\n        \r\n          if (searchList.name.toLowerCase() !== searchWord ){\r\n\r\n                console.log('user dont exist');\r\n\r\n          } else { \r\n            \r\n            return searchList.name.toLowerCase() === searchWord; \r\n        \r\n        }\r\n      })\r\n\r\n      setSearchLists(newArray)\r\n     \r\n\r\n    }\r\n\r\n\r\n    return(\r\n        <div style={{border:\"5px solid black\", paddingBottom: \"800px\"}}>\r\n\r\n            <div className=\"search-input-div\">\r\n\r\n                <input type=\"text\" className=\"search-input\" onChange={onChangeFunction}></input>\r\n\r\n                <FaSistrix className=\"search-input-icon\" onClick={searchUser}/>\r\n                <select>\r\n                    <option>1</option>\r\n                    <option>2</option>\r\n                    <option>3</option>\r\n                </select>\r\n\r\n            </div>\r\n            \r\n            {\r\n                filteredData.map((sL, id) => ( \r\n                <div key={id} style={{marginTop:20, marginBottom:20}}>\r\n                    <p>{sL.name}</p>\r\n                    <p>{sL.age}</p>\r\n                    <p>{sL.color}</p>\r\n                    <p>{sL.id}</p>\r\n                </div>\r\n                \r\n                ))\r\n            \r\n            } \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatList;"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\coding-files\\\\projects\\\\web-chat-app\\\\client\\\\src\\\\asset\\\\ChatProfileFolder\\\\ChatProfile.js\",\n    _s = $RefreshSig$();\n\nimport './ChatProfile.css';\nimport { FaCommentDots, FaGlobe, FaRegSun, FaUser, FaUserAlt } from 'react-icons/fa';\nimport { useContext, useEffect, useState } from 'react';\nimport { ProfileDisplayContext } from '../contextFolder/ProfileDisplayContext';\nimport { MessageDisplayContext } from '../contextFolder/MessageDisplayContext';\nimport { SettingsDisplayContext } from '../contextFolder/SettingsDisplayContext';\nimport axios from 'axios';\nimport { ProfilePhotoChangeContext } from '../contextFolder/ProfilePhotoChangeContext';\nimport { NotificationContext } from '../contextFolder/NotificationContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ChatProfile() {\n  _s();\n\n  //This useState carries the Name of the User that logged in\n  let loggedInNameValue = JSON.parse(sessionStorage.getItem(\"username\")); //This context api state carries info about when user change their profile picture\n\n  const {\n    profilePhotoChangeValue,\n    setProfilePhotoChangeValue\n  } = useContext(ProfilePhotoChangeContext);\n  const {\n    profileDisplayValue,\n    setProfileDisplayValue\n  } = useContext(ProfileDisplayContext);\n  const {\n    messageDisplayValue,\n    setMessageDisplayValue\n  } = useContext(MessageDisplayContext);\n  const {\n    settingsDisplayValue,\n    setSettingsDisplayValue\n  } = useContext(SettingsDisplayContext);\n  const {\n    notificationValue,\n    setNotificationValue\n  } = useContext(NotificationContext); //THIS MAKES YOUR PROFILE VISIBLE WHEN YOU CLICK ON THE PROFILE FEATURE\n\n  const clickProfile = () => {\n    setMessageDisplayValue(false);\n    setSettingsDisplayValue(false);\n    setProfileDisplayValue(true);\n  }; //THIS MAKES YOUR PROFILE VISIBLE WHEN YOU CLICK ON THE MESSAGE FEATURE\n\n\n  const clickMessage = () => {\n    setProfileDisplayValue(false);\n    setSettingsDisplayValue(false);\n    setMessageDisplayValue(true);\n  }; //THIS MAKES YOUR PROFILE VISIBLE WHEN YOU CLICK ON THE SETTINGS FEATURE\n\n\n  const clickSettings = () => {\n    setProfileDisplayValue(false);\n    setMessageDisplayValue(false);\n    setSettingsDisplayValue(true);\n  }; //FETCH MY PROFILE PHOTO ON PAGE REFRESH\n\n\n  const [fetchMyProfilePhoto, setFetchMyProfilePhoto] = useState();\n  useEffect(() => {\n    if (loggedInNameValue) {\n      axios.post(\"http://localhost:4000/getMyProfile\", {\n        name: loggedInNameValue\n      }).then(response => {\n        setFetchMyProfilePhoto(response.data.myProfilePhoto);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }, []); //THIS USEEFECT WILL RUN WHEN THE USER CHANGE THEIR PROFILE PICTURE\n  //WE'RE DOING THIS SO THE USER WON'T HAVE TO ALWAYS REFRESH THE PAGE\n  //SO SEE TO SEE THE NEW EFFECT WHEN THEY CHANGE THEIR PROFILE PICTURE.\n\n  useEffect(() => {\n    if (loggedInNameValue) {\n      axios.post(\"http://localhost:4000/getMyProfile\", {\n        name: loggedInNameValue\n      }).then(response => {\n        setFetchMyProfilePhoto(response.data.myProfilePhoto);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }, [profilePhotoChangeValue]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-top\",\n      children: [fetchMyProfilePhoto ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: fetchMyProfilePhoto,\n        width: \"110px\",\n        className: \"myPhoto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 41\n      }, this) : /*#__PURE__*/_jsxDEV(FaUserAlt, {\n        className: \"icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: loggedInNameValue ? loggedInNameValue : 'username not detected'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"prof\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-list\",\n        children: [/*#__PURE__*/_jsxDEV(FaRegBell, {\n          className: \"FaGlobe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 43\n        }, this), \" Notification \", notificationValue.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-list\",\n        onClick: clickProfile,\n        children: [/*#__PURE__*/_jsxDEV(FaUser, {\n          className: \"FaUser\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 70\n        }, this), \"Profile\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-list\",\n        onClick: clickMessage,\n        children: [/*#__PURE__*/_jsxDEV(FaCommentDots, {\n          className: \"FaCommentDots\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 70\n        }, this), \" Message\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-list\",\n        onClick: clickSettings,\n        children: [/*#__PURE__*/_jsxDEV(FaRegSun, {\n          className: \"FaRegSun\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 71\n        }, this), \" Setting\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChatProfile, \"MAnfdn5nOFZOBNlAWIO1jQrU6e0=\");\n\n_c = ChatProfile;\nexport default ChatProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatProfile\");","map":{"version":3,"names":["FaCommentDots","FaGlobe","FaRegSun","FaUser","FaUserAlt","useContext","useEffect","useState","ProfileDisplayContext","MessageDisplayContext","SettingsDisplayContext","axios","ProfilePhotoChangeContext","NotificationContext","ChatProfile","loggedInNameValue","JSON","parse","sessionStorage","getItem","profilePhotoChangeValue","setProfilePhotoChangeValue","profileDisplayValue","setProfileDisplayValue","messageDisplayValue","setMessageDisplayValue","settingsDisplayValue","setSettingsDisplayValue","notificationValue","setNotificationValue","clickProfile","clickMessage","clickSettings","fetchMyProfilePhoto","setFetchMyProfilePhoto","post","name","then","response","data","myProfilePhoto","catch","error","console","log","length"],"sources":["C:/Users/HP/Desktop/coding-files/projects/web-chat-app/client/src/asset/ChatProfileFolder/ChatProfile.js"],"sourcesContent":["import './ChatProfile.css'\r\nimport { FaCommentDots, FaGlobe, FaRegSun, FaUser, FaUserAlt } from 'react-icons/fa';\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport { ProfileDisplayContext } from '../contextFolder/ProfileDisplayContext';\r\nimport { MessageDisplayContext } from '../contextFolder/MessageDisplayContext';\r\nimport { SettingsDisplayContext } from '../contextFolder/SettingsDisplayContext';\r\nimport axios from 'axios';\r\nimport { ProfilePhotoChangeContext } from '../contextFolder/ProfilePhotoChangeContext';\r\nimport { NotificationContext } from '../contextFolder/NotificationContext';\r\n\r\n\r\nfunction ChatProfile(){\r\n\r\n    //This useState carries the Name of the User that logged in\r\n    let loggedInNameValue = JSON.parse(sessionStorage.getItem(\"username\"));\r\n\r\n\r\n    //This context api state carries info about when user change their profile picture\r\n    const { profilePhotoChangeValue, setProfilePhotoChangeValue } = useContext(ProfilePhotoChangeContext)\r\n    \r\n\r\n    const { profileDisplayValue, setProfileDisplayValue } = useContext(ProfileDisplayContext)\r\n    const { messageDisplayValue, setMessageDisplayValue } = useContext(MessageDisplayContext)\r\n    const { settingsDisplayValue, setSettingsDisplayValue } = useContext(SettingsDisplayContext)\r\n    const { notificationValue, setNotificationValue }  = useContext(NotificationContext)\r\n\r\n    //THIS MAKES YOUR PROFILE VISIBLE WHEN YOU CLICK ON THE PROFILE FEATURE\r\n    const clickProfile = () => {\r\n        setMessageDisplayValue(false)\r\n        setSettingsDisplayValue(false)\r\n        setProfileDisplayValue(true)\r\n\r\n    }\r\n\r\n    //THIS MAKES YOUR PROFILE VISIBLE WHEN YOU CLICK ON THE MESSAGE FEATURE\r\n    const clickMessage = () => {\r\n        setProfileDisplayValue(false)\r\n        setSettingsDisplayValue(false)\r\n        setMessageDisplayValue(true)\r\n    }\r\n\r\n    //THIS MAKES YOUR PROFILE VISIBLE WHEN YOU CLICK ON THE SETTINGS FEATURE\r\n    const clickSettings = () => {\r\n        setProfileDisplayValue(false)\r\n        setMessageDisplayValue(false)\r\n        setSettingsDisplayValue(true)\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    //FETCH MY PROFILE PHOTO ON PAGE REFRESH\r\n    const [fetchMyProfilePhoto, setFetchMyProfilePhoto] = useState()\r\n    useEffect(() => {\r\n\r\n        if (loggedInNameValue) {  \r\n\r\n            axios.post(\"http://localhost:4000/getMyProfile\", {\r\n\r\n                name: loggedInNameValue\r\n\r\n            }).then((response) => {\r\n\r\n                setFetchMyProfilePhoto(response.data.myProfilePhoto)\r\n\r\n            }).catch((error) => {\r\n\r\n                console.log(error)\r\n            })\r\n\r\n        }\r\n    }, [ ])\r\n\r\n\r\n    \r\n    //THIS USEEFECT WILL RUN WHEN THE USER CHANGE THEIR PROFILE PICTURE\r\n    //WE'RE DOING THIS SO THE USER WON'T HAVE TO ALWAYS REFRESH THE PAGE\r\n    //SO SEE TO SEE THE NEW EFFECT WHEN THEY CHANGE THEIR PROFILE PICTURE.\r\n\r\n    useEffect(() => {\r\n\r\n        if (loggedInNameValue) {  \r\n \r\n            axios.post(\"http://localhost:4000/getMyProfile\", {\r\n\r\n                name: loggedInNameValue\r\n\r\n            }).then((response) => {\r\n\r\n                setFetchMyProfilePhoto(response.data.myProfilePhoto)\r\n        \r\n            }).catch((error) => {\r\n\r\n                console.log(error)\r\n            })\r\n\r\n        }\r\n\r\n    }, [ profilePhotoChangeValue ])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    \r\n    return(\r\n        <div className=\"chat-profile-container\">\r\n           \r\n\r\n            <div className=\"profile-top\">\r\n\r\n                {/*THIS IS TO DISPLAY YOUR PROFILE PICTURE */}\r\n                { fetchMyProfilePhoto ? <img src={fetchMyProfilePhoto} width=\"110px\" className=\"myPhoto\"/> : \r\n                \r\n                <FaUserAlt className=\"icon\"/> \r\n                \r\n                }\r\n\r\n                <p>\r\n                  {/* localStorageName ? localStorageName : 'username?' */}\r\n                  {loggedInNameValue ? loggedInNameValue : 'username not detected'}\r\n                 \r\n                </p>\r\n                 \r\n\r\n            </div>\r\n        \r\n            <div className=\"prof\">\r\n            <div className=\"profile-list\"><FaRegBell className=\"FaGlobe\"/> Notification { notificationValue.length }</div>\r\n                <div className=\"profile-list\" onClick={clickProfile}><FaUser className=\"FaUser\"/>Profile</div>\r\n                <div className=\"profile-list\" onClick={clickMessage}><FaCommentDots className=\"FaCommentDots\"/> Message</div>\r\n                <div className=\"profile-list\" onClick={clickSettings}><FaRegSun className=\"FaRegSun\"/> Setting</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatProfile;"],"mappings":";;;AAAA,OAAO,mBAAP;AACA,SAASA,aAAT,EAAwBC,OAAxB,EAAiCC,QAAjC,EAA2CC,MAA3C,EAAmDC,SAAnD,QAAoE,gBAApE;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,SAASC,qBAAT,QAAsC,wCAAtC;AACA,SAASC,qBAAT,QAAsC,wCAAtC;AACA,SAASC,sBAAT,QAAuC,yCAAvC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,yBAAT,QAA0C,4CAA1C;AACA,SAASC,mBAAT,QAAoC,sCAApC;;;AAGA,SAASC,WAAT,GAAsB;EAAA;;EAElB;EACA,IAAIC,iBAAiB,GAAGC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAX,CAAxB,CAHkB,CAMlB;;EACA,MAAM;IAAEC,uBAAF;IAA2BC;EAA3B,IAA0DhB,UAAU,CAACO,yBAAD,CAA1E;EAGA,MAAM;IAAEU,mBAAF;IAAuBC;EAAvB,IAAkDlB,UAAU,CAACG,qBAAD,CAAlE;EACA,MAAM;IAAEgB,mBAAF;IAAuBC;EAAvB,IAAkDpB,UAAU,CAACI,qBAAD,CAAlE;EACA,MAAM;IAAEiB,oBAAF;IAAwBC;EAAxB,IAAoDtB,UAAU,CAACK,sBAAD,CAApE;EACA,MAAM;IAAEkB,iBAAF;IAAqBC;EAArB,IAA+CxB,UAAU,CAACQ,mBAAD,CAA/D,CAbkB,CAelB;;EACA,MAAMiB,YAAY,GAAG,MAAM;IACvBL,sBAAsB,CAAC,KAAD,CAAtB;IACAE,uBAAuB,CAAC,KAAD,CAAvB;IACAJ,sBAAsB,CAAC,IAAD,CAAtB;EAEH,CALD,CAhBkB,CAuBlB;;;EACA,MAAMQ,YAAY,GAAG,MAAM;IACvBR,sBAAsB,CAAC,KAAD,CAAtB;IACAI,uBAAuB,CAAC,KAAD,CAAvB;IACAF,sBAAsB,CAAC,IAAD,CAAtB;EACH,CAJD,CAxBkB,CA8BlB;;;EACA,MAAMO,aAAa,GAAG,MAAM;IACxBT,sBAAsB,CAAC,KAAD,CAAtB;IACAE,sBAAsB,CAAC,KAAD,CAAtB;IACAE,uBAAuB,CAAC,IAAD,CAAvB;EAEH,CALD,CA/BkB,CA0ClB;;;EACA,MAAM,CAACM,mBAAD,EAAsBC,sBAAtB,IAAgD3B,QAAQ,EAA9D;EACAD,SAAS,CAAC,MAAM;IAEZ,IAAIS,iBAAJ,EAAuB;MAEnBJ,KAAK,CAACwB,IAAN,CAAW,oCAAX,EAAiD;QAE7CC,IAAI,EAAErB;MAFuC,CAAjD,EAIGsB,IAJH,CAISC,QAAD,IAAc;QAElBJ,sBAAsB,CAACI,QAAQ,CAACC,IAAT,CAAcC,cAAf,CAAtB;MAEH,CARD,EAQGC,KARH,CAQUC,KAAD,IAAW;QAEhBC,OAAO,CAACC,GAAR,CAAYF,KAAZ;MACH,CAXD;IAaH;EACJ,CAlBQ,EAkBN,EAlBM,CAAT,CA5CkB,CAkElB;EACA;EACA;;EAEApC,SAAS,CAAC,MAAM;IAEZ,IAAIS,iBAAJ,EAAuB;MAEnBJ,KAAK,CAACwB,IAAN,CAAW,oCAAX,EAAiD;QAE7CC,IAAI,EAAErB;MAFuC,CAAjD,EAIGsB,IAJH,CAISC,QAAD,IAAc;QAElBJ,sBAAsB,CAACI,QAAQ,CAACC,IAAT,CAAcC,cAAf,CAAtB;MAEH,CARD,EAQGC,KARH,CAQUC,KAAD,IAAW;QAEhBC,OAAO,CAACC,GAAR,CAAYF,KAAZ;MACH,CAXD;IAaH;EAEJ,CAnBQ,EAmBN,CAAEtB,uBAAF,CAnBM,CAAT;EA2BA,oBACI;IAAK,SAAS,EAAC,wBAAf;IAAA,wBAGI;MAAK,SAAS,EAAC,aAAf;MAAA,WAGMa,mBAAmB,gBAAG;QAAK,GAAG,EAAEA,mBAAV;QAA+B,KAAK,EAAC,OAArC;QAA6C,SAAS,EAAC;MAAvD;QAAA;QAAA;QAAA;MAAA,QAAH,gBAErB,QAAC,SAAD;QAAW,SAAS,EAAC;MAArB;QAAA;QAAA;QAAA;MAAA,QALJ,eASI;QAAA,UAEGlB,iBAAiB,GAAGA,iBAAH,GAAuB;MAF3C;QAAA;QAAA;QAAA;MAAA,QATJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ,eAqBI;MAAK,SAAS,EAAC,MAAf;MAAA,wBACA;QAAK,SAAS,EAAC,cAAf;QAAA,wBAA8B,QAAC,SAAD;UAAW,SAAS,EAAC;QAArB;UAAA;UAAA;UAAA;QAAA,QAA9B,oBAA8Ea,iBAAiB,CAACiB,MAAhG;MAAA;QAAA;QAAA;QAAA;MAAA,QADA,eAEI;QAAK,SAAS,EAAC,cAAf;QAA8B,OAAO,EAAEf,YAAvC;QAAA,wBAAqD,QAAC,MAAD;UAAQ,SAAS,EAAC;QAAlB;UAAA;UAAA;UAAA;QAAA,QAArD;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAK,SAAS,EAAC,cAAf;QAA8B,OAAO,EAAEC,YAAvC;QAAA,wBAAqD,QAAC,aAAD;UAAe,SAAS,EAAC;QAAzB;UAAA;UAAA;UAAA;QAAA,QAArD;MAAA;QAAA;QAAA;QAAA;MAAA,QAHJ,eAII;QAAK,SAAS,EAAC,cAAf;QAA8B,OAAO,EAAEC,aAAvC;QAAA,wBAAsD,QAAC,QAAD;UAAU,SAAS,EAAC;QAApB;UAAA;UAAA;UAAA;QAAA,QAAtD;MAAA;QAAA;QAAA;QAAA;MAAA,QAJJ;IAAA;MAAA;MAAA;MAAA;IAAA,QArBJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AA8BH;;GA/HQlB,W;;KAAAA,W;AAiIT,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}
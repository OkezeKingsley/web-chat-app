{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\coding-files\\\\projects\\\\web-chat-app\\\\client\\\\src\\\\asset\\\\ChatListFolder\\\\ChatList.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { FaSistrix } from \"react-icons/fa\";\nimport './ChatList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ChatList() {\n  _s();\n\n  const [listOfUserFromDatabase, setListOfUserFromDatabase] = useState([{\n    name: \"Tom\",\n    age: 16,\n    color: \"purple\",\n    id: 1\n  }, {\n    name: \"Kim\",\n    age: 17,\n    color: \"black\",\n    id: 2\n  }, {\n    name: \"Rio\",\n    age: 19,\n    color: \"green\",\n    id: 3\n  }, {\n    name: \"Joy\",\n    age: 17,\n    color: \"white\",\n    id: 4\n  }]); //storing the list of user from DB here so we can map it on the drop down\n  //search div section\n\n  const [searchLists, setSearchLists] = useState(listOfUserFromDatabase); //This is used caputing what the user types into the search box\n\n  const [searchFilter, setSearchFilter] = useState(); //This is to store what the user type in the search box so we can\n  //use for filtering and also filter the name of user in realtime \n  //based on serach input\n\n  const onChangeFunction = () => {\n    return e => {\n      setSearchFilter(e.target.value.toLowerCase()); //         setSearchLists(() => {\n      //             searchLists.filter( s => s.name.includes(searchFilter) )\n      //         })\n    };\n  }; //This function is used for searching for user with the name that \n  //matches what the user is searching\n\n\n  const searchUser = () => {\n    const newArray = searchLists.filter(searchList => {\n      /*      if (searchList.name.toLowerCase() !== searchFilter ){\r\n                    console.log('user dont exist');\r\n              } else { */\n      return searchList.name.toLowerCase() === searchFilter; //      }\n    });\n    setSearchLists(newArray);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      border: \"5px solid black\",\n      paddingBottom: \"800px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-input-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"search-input\",\n        onChange: onChangeFunction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FaSistrix, {\n        className: \"search-input-icon\",\n        onClick: searchUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), searchFilter, searchLists.map((sL, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 20,\n        marginBottom: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: sL.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: sL.age\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: sL.color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: sL.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this)]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChatList, \"KeoDvjxUjfQ9vTfcytu6H+UFgZk=\");\n\n_c = ChatList;\nexport default ChatList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatList\");","map":{"version":3,"names":["useState","FaSistrix","ChatList","listOfUserFromDatabase","setListOfUserFromDatabase","name","age","color","id","searchLists","setSearchLists","searchFilter","setSearchFilter","onChangeFunction","e","target","value","toLowerCase","searchUser","newArray","filter","searchList","border","paddingBottom","map","sL","marginTop","marginBottom"],"sources":["C:/Users/HP/Desktop/coding-files/projects/web-chat-app/client/src/asset/ChatListFolder/ChatList.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { FaSistrix } from \"react-icons/fa\";\r\nimport './ChatList.css';\r\n\r\nfunction ChatList(){\r\n\r\n    const [listOfUserFromDatabase, setListOfUserFromDatabase] = useState([{\r\n        name:\"Tom\",\r\n        age: 16,\r\n        color:\"purple\",\r\n        id:1\r\n    },\r\n    {\r\n        name:\"Kim\",\r\n        age: 17,\r\n        color:\"black\",\r\n        id:2\r\n    },\r\n\r\n    {\r\n        name:\"Rio\",\r\n        age: 19,\r\n        color:\"green\",\r\n        id:3\r\n    },\r\n\r\n    {\r\n        name:\"Joy\",\r\n        age: 17,\r\n        color:\"white\",\r\n        id:4\r\n    }])\r\n\r\n    //storing the list of user from DB here so we can map it on the drop down\r\n    //search div section\r\n    const [searchLists, setSearchLists] = useState( listOfUserFromDatabase )\r\n\r\n\r\n    //This is used caputing what the user types into the search box\r\n    const [searchFilter, setSearchFilter] = useState();\r\n\r\n    //This is to store what the user type in the search box so we can\r\n    //use for filtering and also filter the name of user in realtime \r\n    //based on serach input\r\n    const onChangeFunction = ( ) => {\r\n\r\n        return (e) => { setSearchFilter(e.target.value.toLowerCase())\r\n                    \r\n   //         setSearchLists(() => {\r\n   //             searchLists.filter( s => s.name.includes(searchFilter) )\r\n   //         })\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    //This function is used for searching for user with the name that \r\n    //matches what the user is searching\r\n    const searchUser = () => {\r\n\r\n       const newArray = searchLists.filter( (searchList) => {\r\n          \r\n\r\n    /*      if (searchList.name.toLowerCase() !== searchFilter ){\r\n\r\n                console.log('user dont exist');\r\n\r\n          } else { */\r\n            \r\n            return searchList.name.toLowerCase() === searchFilter; \r\n        \r\n  //      }\r\n      })\r\n\r\n      setSearchLists(newArray)\r\n     \r\n\r\n    }\r\n\r\n\r\n    return(\r\n        <div style={{border:\"5px solid black\", paddingBottom: \"800px\"}}>\r\n\r\n            <div className=\"search-input-div\">\r\n\r\n                    <input type=\"text\" className=\"search-input\" onChange={onChangeFunction}></input>\r\n\r\n                <FaSistrix className=\"search-input-icon\" onClick={searchUser}/>\r\n\r\n            </div>\r\n            \r\n            {searchFilter}\r\n            {\r\n                searchLists.map((sL, id) => ( \r\n                <div key={id} style={{marginTop:20, marginBottom:20}}>\r\n                    <p>{sL.name}</p>\r\n                    <p>{sL.age}</p>\r\n                    <p>{sL.color}</p>\r\n                    <p>{sL.id}</p>\r\n                </div>\r\n                \r\n                ))\r\n            \r\n            } \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatList;"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,OAAO,gBAAP;;;AAEA,SAASC,QAAT,GAAmB;EAAA;;EAEf,MAAM,CAACC,sBAAD,EAAyBC,yBAAzB,IAAsDJ,QAAQ,CAAC,CAAC;IAClEK,IAAI,EAAC,KAD6D;IAElEC,GAAG,EAAE,EAF6D;IAGlEC,KAAK,EAAC,QAH4D;IAIlEC,EAAE,EAAC;EAJ+D,CAAD,EAMrE;IACIH,IAAI,EAAC,KADT;IAEIC,GAAG,EAAE,EAFT;IAGIC,KAAK,EAAC,OAHV;IAIIC,EAAE,EAAC;EAJP,CANqE,EAarE;IACIH,IAAI,EAAC,KADT;IAEIC,GAAG,EAAE,EAFT;IAGIC,KAAK,EAAC,OAHV;IAIIC,EAAE,EAAC;EAJP,CAbqE,EAoBrE;IACIH,IAAI,EAAC,KADT;IAEIC,GAAG,EAAE,EAFT;IAGIC,KAAK,EAAC,OAHV;IAIIC,EAAE,EAAC;EAJP,CApBqE,CAAD,CAApE,CAFe,CA6Bf;EACA;;EACA,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAEG,sBAAF,CAA9C,CA/Be,CAkCf;;EACA,MAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,EAAhD,CAnCe,CAqCf;EACA;EACA;;EACA,MAAMa,gBAAgB,GAAG,MAAO;IAE5B,OAAQC,CAAD,IAAO;MAAEF,eAAe,CAACE,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,WAAf,EAAD,CAAf,CAAF,CAEnB;MACA;MACA;IAEM,CAND;EAQH,CAVD,CAxCe,CAqDf;EACA;;;EACA,MAAMC,UAAU,GAAG,MAAM;IAEtB,MAAMC,QAAQ,GAAGV,WAAW,CAACW,MAAZ,CAAqBC,UAAD,IAAgB;MAGxD;AACJ;AACA;MAIY,OAAOA,UAAU,CAAChB,IAAX,CAAgBY,WAAhB,OAAkCN,YAAzC,CATgD,CAW1D;IACK,CAZiB,CAAjB;IAcDD,cAAc,CAACS,QAAD,CAAd;EAGD,CAnBD;;EAsBA,oBACI;IAAK,KAAK,EAAE;MAACG,MAAM,EAAC,iBAAR;MAA2BC,aAAa,EAAE;IAA1C,CAAZ;IAAA,wBAEI;MAAK,SAAS,EAAC,kBAAf;MAAA,wBAEQ;QAAO,IAAI,EAAC,MAAZ;QAAmB,SAAS,EAAC,cAA7B;QAA4C,QAAQ,EAAEV;MAAtD;QAAA;QAAA;QAAA;MAAA,QAFR,eAII,QAAC,SAAD;QAAW,SAAS,EAAC,mBAArB;QAAyC,OAAO,EAAEK;MAAlD;QAAA;QAAA;QAAA;MAAA,QAJJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,EAUKP,YAVL,EAYQF,WAAW,CAACe,GAAZ,CAAgB,CAACC,EAAD,EAAKjB,EAAL,kBAChB;MAAc,KAAK,EAAE;QAACkB,SAAS,EAAC,EAAX;QAAeC,YAAY,EAAC;MAA5B,CAArB;MAAA,wBACI;QAAA,UAAIF,EAAE,CAACpB;MAAP;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAA,UAAIoB,EAAE,CAACnB;MAAP;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAA,UAAImB,EAAE,CAAClB;MAAP;QAAA;QAAA;QAAA;MAAA,QAHJ,eAII;QAAA,UAAIkB,EAAE,CAACjB;MAAP;QAAA;QAAA;QAAA;MAAA,QAJJ;IAAA,GAAUA,EAAV;MAAA;MAAA;MAAA;IAAA,QADA,CAZR;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AA2BH;;GAxGQN,Q;;KAAAA,Q;AA0GT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}